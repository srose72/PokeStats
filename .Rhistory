pokedex <- read.csv(file.choose())
View(pokedex)
rattata <- read.csv(file.choose())
View(rattata)
t.test(rattata$Height, 0.3)
?t.test
t.test(rattata$Height, mu = 0.3)
kanto <- subset(pokedex, Generation == 1 & Form != "Alolan")
View(kanto)
rm(fish)
rm(km2)
rm(time)
rm(transf)
rm(x)
rm(xaxis)
rm(y)
rm(data)
rm(datalogger)
rm(kelp_fish.glm)
rm(kelp_fish.lm)
pokedex$Type1 == "Grass"
subset(pokedex, Type1 == "Grass")
grass <- subset(pokedex, Type1 == "Grass")
View(grass)
grass <- subset(pokedex, Type1 == "Grass" || Type2 == "Grass")
grass <- subset(pokedex, Type1 == "Grass" | Type2 == "Grass")
water <- subset(pokedex, Type1 == "Water" | Type2 == "Water")
View(water)
fire <- subset(pokedex, Type1 == "Fire" | Type2 == "Fire")
View(fire)
levels(fire$Type1)
levels(fire$Type2)
fire(Type1 == "Grass")
fire$Type1 == "Grass"
factor(fire$Type1)
factor(fire$Type2)
rattata <- read.csv(file.choose())
View(rattata)
boxplot(rattata$Rattata_Height, horizontal = TRUE)
summary(rattata$Rattata_Height)
t.test(rattata$Rattata_Height, mu = 0.3)
levels(pokedex$Form)
factor(pokedex$Form)
table(pokedex$Form)
boxplot(pokedex$TotalStat[pokedex$Form == "Mega"])
hist(pokedex$TotalStat[pokedex$Form == "Mega"])
test <- pokedex$DexNum[pokedex$Form == "Mega"]
MegaNum <- pokedex$DexNum[pokedex$Form == "Mega"]
rm(test)
Megas <- subset(pokedex, DexNum %in% MegaNum)
View(Megas)
boxplot(Megas$TotalStat~Megas$Form)
boxplot(Megas$TotalStat~Megas$Form, horizontal == TRUE)
boxplot(Megas$TotalStat~Megas$Form, Horizontal == TRUE)
?boxplot
boxplot(Megas$TotalStat~Megas$Form, horizontal = TRUE)
table(Megas$Form)
levels(Megas$Form)
levels(Megas$Form) <- c("", "Mega")
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE)
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
PreM <- Megas$TotalStat[Megas$Form != "Mega"]
PostM <- Megas$TotalStat[Megas$Form == "Mega"]
mean(PostM - PreM)
PreM
PostM
PostM - PreM
PreM <- Megas$TotalStat[Megas$Form != "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM <- Megas$TotalStat[Megas$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
mean(PostM - PreM)
PostM - PreM
PreM
PostM
bio360 <-read.csv(file.choose())
View(bio360)
bio360 <-read.csv(file.choose())
View(bio360)
A <- mean(bio360$Station[bio360$Station == "A"])
A <- subset(bio360, Station == "A")
<- subset(bio360, Station == "B")
B <- subset(bio360, Station == "B")
mean(A)
mean(A$Session)
mean(A$GUD)
mean(B$GUD)
range(A$GUD)
summary(A$GUD)
summary(B$GUD)
boxplot(bio360$GUD~bio360$Station)
t.test(A$GUD, B$GUD)
hist(A$GUD)
qqnorm(A$GUD)
qqline(A$GUD)
qqnorm(B$GUD)
qqline(B$GUD)
qqnorm(asin(A$GUD))
qqnorm(sin(A$GUD))
qqline(sin(A$GUD))
qqnorm(sin(B$GUD))
qqline(sin(B$GUD))
?shapiro.test
shapiro.test(A$GUD)
shapiro.test(sin(A$GUD))
shapiro.test(sin(B$GUD))
MegaNum <- pokedex$DexNum[pokedex$Form == "Mega"]
Megas <- subset(pokedex, DexNum %in% MegaNum)
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
PreM <- Megas$TotalStat[Megas$Form != "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM <- Megas$TotalStat[Megas$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM - PreM
View(Megas)
View(pokedex)
pokedex <- read.csv(file.choose())
View(pokedex)
MegaNum <- pokedex$DexNum[pokedex$Form == "Mega"]
Megas <- subset(pokedex, DexNum %in% MegaNum)
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
PreM <- Megas$TotalStat[Megas$Form != "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM <- Megas$TotalStat[Megas$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM - PreM
View(Megas)
PreM
PostM
rnorm(n = 30, mean = 0.7, sd = 0.125)
hist(rnorm(n = 30, mean = 0.7, sd = 0.125))
hist(rnorm(n = 35, mean = 0.7, sd = 0.125))
hist(rnorm(n = 35, mean = 6.9, sd = 0.125))
round(rnorm(n = 30, mean = 0.7, sd = 0.125), digits = 3)
corr(pokedex$Height~pokedex$Weight)
cor(pokedex$Height~pokedex$Weight)
cor(pokedex$Height,pokedex$Weight)
?cor
cor(pokedex$Height,pokedex$Weight, na.rm = TRUE)
cor(pokedex$Height,pokedex$Weight)
cor(kanto$Height,kanto$Weight)
plot(kanto$Height~kanto$Weight)
bulbaWeight <- round(rnorm(n = 30, mean = 0.7, sd = 0.125), digits = 2)
plot(bulbaWeight)
hist(bulbaWeight)
qqplot(bulbaWeight)
?bulbaWeight
?qqlot
?qqplot
qqnorm(bulbaWeight)
qqline(bulbaWeight)
qqnorm(rattata)
qqnorm(rattata$Rattata_Height)
qqline(rattata$Rattata_Height)
qqnorm(Megas$TotalStat)
qqline(Megas$TotalStat)
wattle <- read.csv(file.choose())
wattle <- read.csv(file.choose())
View(wattle)
sd(wattle$pre.pha - wattle$post.pha)
sd(wattle$post.pha - wattle$pre.pha)
birbs <- read.csv(file.choose())
View(birbs)
boxplot(birbs$CP~birbs$Pokemon)
qqplot(birbs$CP[birbs$Pokemon == "Pidgey"])
?qqplot
birbs$CP[birbs$Pokemon == "Pidgey"]
Pidg<-birbs$CP[birbs$Pokemon == "Pidgey"]
qqplot(Pidg)
Pidg <- subset(birbs, Pokemon == "Pidgey")
qqplot(Pidg)
qqplot(Pidg$CP)
plot(Pidg$CP)
qqnorm(Pidg$CP)
qqplit(Pidg$CP)
qqpline(Pidg$CP)
qqline(Pidg$CP)
qqnorm(birbs$CP[birbs$Pokemon == "Taillow"])
Johto <- subset(pokedex, generation == 2)
Johto <- subset(pokedex, Generation == 2)
Hoenn <- subset(pokedex, Generation == 3)
Sinnoh <- subset(pokedex, Generation == 4)
Unova <- subset(pokedex, Generation == 5)
Kalos <- subset(pokedex, Generation == 6)
Alola <- subset(pokedex, Generation == 7 | Form == "Alolan")
View(Alola)
kanto <- subset(pokedex, Generation == 1)
Johto <- subset(pokedex, Generation == 2)
Hoenn <- subset(pokedex, Generation == 3)
Sinnoh <- subset(pokedex, Generation == 4)
Unova <- subset(pokedex, Generation == 5)
Kalos <- subset(pokedex, Generation == 6)
Alola <- subset(pokedex, Generation == 7)
raw <- read.csv(file.choose())
pokedex <- raw
kanto <- subset(pokedex, Generation == 1)
Johto <- subset(pokedex, Generation == 2)
Hoenn <- subset(pokedex, Generation == 3)
Sinnoh <- subset(pokedex, Generation == 4)
rm(kanto)
Kanto <- subset(pokedex, Generation == 1)
Johto <- subset(pokedex, Generation == 2)
Hoenn <- subset(pokedex, Generation == 3)
Sinnoh <- subset(pokedex, Generation == 4)
Unova <- subset(pokedex, Generation == 5)
Kalos <- subset(pokedex, Generation == 6)
Alola <- subset(pokedex, Generation == 7)
MegaNum <- pokedex$DexNum[pokedex$Form == "Mega"]
Megas <- subset(pokedex, DexNum %in% MegaNum)
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
PreM <- Megas$TotalStat[Megas$Form != "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM <- Megas$TotalStat[Megas$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PreM
PostM
PostM - PreM
View(Megas)
len(PostM)
length(PostM)
length(PreM)
subset(Megas, Form != "Mega")
Megas$Name[Megas$Form!="Mega"]
Megas$Name[Megas$Form=="Mega"]
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
PreM <- Megas$TotalStat[Megas$Form != "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "Mewtwo Y"]
PostM <- Megas$TotalStat[Megas$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "MewTwo Y"]
PostM - PreM
length(PostM)
length(PreM)
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
PostM <- Megas$TotalStat[Megas$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "Mewtwo Y"]
PreM <- Megas$TotalStat[Megas$Form != "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "Mewtwo Y"]
PostM - PreM
t.test(PostM-PreM, paired = TRUE, alternative = "greater")
t.test(PostM,PreM, paired = TRUE, alternative = "greater")
?t.test
t.test(PostM-PreM, mu = 0, alternative = "greater")
megaD <- PostM-PreM
t.test(megaD, mu = 0, alternative = "greater")
megaD
boxplot(Megas$TotalStat~Megas$Form == "Mega", horizontal = TRUE, ylab = "Mega Evolved", xlab = "Total IVs")
mega <- pokedex$TotalStat[pokedex$Form == "Mega"]
nonmega <- pokedex$TotalStat[pokedex$Form != "Mega"]
boxplot(mega, nonmega)
?boxplot
boxplot(mega, nonmega, names = c("Mega", "Non-Mega"))
t.test(mega, nonmega, alternative = "greater")
boxplot(pokedex$TotalStat~pokedex$Generation)
boxplot(pokedex$HP~pokedex$Generation)
boxplot(pokedex$Attack~pokedex$Generation)
boxplot(pokedex$Defense~pokedex$Generation)
boxplot(pokedex$SpAtk~pokedex$Generation)
boxplot(pokedex$Speed~pokedex$Generation)
boxplot(pokedex$CatchRate~pokedex$Generation)
mean(Kanto$CatchRate)
mean(Johto$CatchRate)
boxplot(pokedex$Height~pokedex$Generation)
boxplot(pokedex$TotalStat~pokedex$LevelingRate)
boxplot(pokedex$TotalStat~pokedex$Legendary)
legend.aov <- aov(pokedex$TotalStat~pokedex$Legendary)
anova(legend.aov)
TukeyHSD(legend.aov)
require("pwr")
pwr.t.test(n = 29, d = 0.5, sig.level = 0.05, power = , type = "one.sample", alternative = "greater")
pwr.t.test(n = 29, d = 0.5, sig.level = 0.05, power = , type = "one.sample", alternative = "two.sided")
squir_raw <- read.csv(file.choose())
View(squir_raw)
squirrels <- subset(squir_raw, PostWeight != NA)
View(squirrels)
squirrels <- subset(squir_raw, PostWeight != "NA")
View(squirrels)
summary(squirrels$GUD)
boxplot(squirrels$GUD)
squir_raw <- read.csv(file.choose())
squirrels <- subset(squir_raw, PostWeight != "NA")
boxplot(squirrels$GUD)
summary(squirrels$GUD)
boxplot(squirrels$GUD~squirrels$SidewalkDist)
View(squirrels)
names(SidewalkDist)
names(squirrels$SidewalkDist)
factor(squirrels$SidewalkDist)
squirrels_avg <- read.csv(file.choose())
View(squirrels_avg)
boxplot(squirrels_avg$AvgGUD~squirrels_avg$SidewalkDist)
avg <- squirrels_avg[,7:19]
avg <- squirrels_avg[7:18,]
View(avg)
boxplot(avg$AvgGUD~avg$SidewalkDist)
factor(avg)
factor(avg$SidewalkDist)
avg_c <- avg$AvgGUD[avg$SidewalkDist == "Close"]
avg_f <- avg$AvgGUD[avg$SidewalkDist == "Far"]
t.test(avg_c, avg_f, paired = TRUE, alternative = "two.sided")
t.test(avg_c, avg_f, paired = TRUE, alternative = "greater")
t.test(avg_c, avg_f, paired = TRUE)
avg_diff <- avg_c - avg_f
t.test(avg_diff, paired = TRUE, alternative = "greater")
t.test(avg_diff, mu = 0, alternative = "greater")
boxplot(squirrels$GUD~squirrels$SidewalkDist)
boxplot(avg$AvgGUD~avg$SidewalkDist)
boxplot(squirrels$GUD~squirrels$SidewalkDist, xlab = "Distance to Sidewalk")
boxplot(squirrels$GUD~squirrels$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
boxplot(avg$AvgGUD~avg$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
t.test(squirrels$GUD~squirrels$SidewalkDist, paired = FALSE)
t.test(squirrels$GUD~squirrels$SidewalkDist, paired = FALSE, alternative = "greater")
t.test(squirrels$GUD[squirrels$SidewalkDist == "Close"], squirrels$GUD[squirrels$SidewalkDist == "Far"], paired = FALSE, alternative = "less")
t.test(squirrels$GUD~squirrels$SidewalkDist, paired = FALSE, alternative = "less")
t.test(squirrels$GUD~squirrels$SidewalkDist, paired = FALSE, alternative = "greater")
t.test(avg$AvgGUD~avg$SidewalkDist, paired = FALSE, alternative = "greater")
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Far"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Far"])
qqnorm(avg$AvgGUD[avg$SidewalkDist == "Close"])
qqline(avg$AvgGUD[avg$SidewalkDist == "Close"])
qqnorm(avg$AvgGUD[avg$SidewalkDist == "Far"])
qqline(avg$AvgGUD[avg$SidewalkDist == "Far"])
par(mfrow = c(2,2))
boxplot(squirrels$GUD~squirrels$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Far"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Far"])
par(mfrow = c(2,2))
boxplot(squirrels$GUD~squirrels$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Far"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Far"])
boxplot(avg$AvgGUD~avg$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
boxplot(avg$AvgGUD~avg$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
qqnorm(avg$AvgGUD[avg$SidewalkDist == "Close"])
qqline(avg$AvgGUD[avg$SidewalkDist == "Close"])
qqnorm(avg$AvgGUD[avg$SidewalkDist == "Far"])
qqline(avg$AvgGUD[avg$SidewalkDist == "Far"])
summary(squirrels$GUD)
boxplot(squirrels$GUD~squirrels$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
boxplot(squirrels$GUD~squirrels$SidewalkDist, xlab = "Distance to Sidewalk", ylab = "GUD")
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Close"])
qqnorm(squirrels$GUD[squirrels$SidewalkDist == "Far"])
qqline(squirrels$GUD[squirrels$SidewalkDist == "Far"])
t.test(squirrels$GUD~squirrels$SidewalkDist, paired = FALSE, alternative = "greater")
##Dragon
boxplot(pokedex$Weight~pokedex$Type1 + pokedex$Type2, las = 1)
##Dragon
boxplot(pokedex$Weight~pokedex$Type1, pokedex$Type2)
##Dragon
boxplot(pokedex$Weight~pokedex$Type1)#, pokedex$Type2)
##Dragon
boxplot(pokedex$Weight~pokedex$Type1 - pokedex$Type2)
##Dragon
boxplot(pokedex$Weight~pokedex$Type1 + pokedex$Type2)
weight.aov <- aov(pokedex$Weight~pokedex$Type1 + pokedex$Type2)
anova(weight.aov)
TukeyHSD(weight.aov)
##Dragon
dragons <- subset(pokedex, Type1 == "Dragon" | Type2 == "Dragon")
View(dragons)
raw <- read.csv(file.choose())
pokedex <- raw
View(pokedex)
##Dragon
dragons <- subset(pokedex, Type1 == "Dragon" | Type2 == "Dragon")
View(dragons)
corr(pokedex$Weight~pokedex$Height)
plot(pokedex$Weight~pokedex$Height)
cor(pokedex$Weight~pokedex$Height)
cor(pokedex$Height, pokedex$Weight)
weight.lm <- lm(Weight ~ Height, data = pokedex)
summary(weight.lm)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531)
abline(-11.821, 65.531, col = "red", cex = 2)
?abline
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(10, 250, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9, 250, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.5, 250, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(9.5, 250, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.2, 250, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.2, 100, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(9.2, 100, legend = c("y = 65.531x + -11.821"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.2, 100, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.4, 100, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.4, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(9.4, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
legend(9.3, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(9.3, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
boxplot(mega, nonmega, names = c("Mega", "Non-Mega"))
###Anova for Smogon Tiers
boxplot(pokedex$TotalStat~pokedex$Smogon)
smogon.aov <- aov(pokedex$TotalStat~pokedex$Smogon)
anova(smogon.aov)
TukeyHSD(smogon.aov)
##Height and weight
cor(pokedex$Height, pokedex$Weight)
weight.lm <- lm(Weight ~ Height, data = pokedex)
summary(weight.lm)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(9.3, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
AlolanForms <- subset(pokedex, Form == "Alolan")
qqnorm(AlolanForms$TotalStat)
qqline(AlolanForms$TotalStat)
KantoAlolan <- subset(pokedex, DexNum %in% AlolanForms$DexNum & Generation == 1)
qqnorm(KantoAlolan)
qqnorm(KantoAlolan$TotalStat)
qqline(KantoAlolan$TotalStat)
?t.test
t.test(AlolanForms$TotalStat, KantoAlolan$TotalStat, paired = TRUE, alternative = "two.sided")
qqnorm(AlolanForms$HP)
AlolanForms$HP - KantoAlolan$HP
AlolanForms$Attack - KantoAlolan$Attack
AlolanForms$Defense - KantoAlolan$Defense
AlolanForms$SpAtk - KantoAlolan$Defense
AlolanForms$SpAtk - KantoAlolan$SpAtk
AlolanForms$SpDef - KantoAlolan$SpDef
qqnorm(AlolanForms$SpAtk)
qqline(AlolanForms$SpAtk)
qqnorm(KantoAlolan$SpAtk)
qqline(KantoAlolan$SpAtk)
t.test(AlolanForms$SpAtk, KantoAlolan$SpAtk, paired = TRUE, alternative = "two.sided")
mean(pokedex$Height)
t.test(dragons$Height, mu = mean(pokedex$Height), alternative = "greater")
t.test(dragons$Height, mu = mean(pokedex$Height[pokedex$Type1 != "Dragon" & pokedex$Type2 != "Dragon"]), alternative = "greater")
cor(pokedex$TotalStat, pokedex$CatchRate)
catch.lm <- lm(CatchRate ~ TotalStat, data = pokedex)
summary(catch.lm)
plot(pokedex$CatchRate~pokedex$TotalStat)
abline(-0.09493, 98.79339, col = "red", lwd = 2)
plot(pokedex$CatchRate~pokedex$TotalStat)
abline(-0.09493, 98.79339, col = "red", lwd = 2)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
plot(pokedex$CatchRate~pokedex$TotalStat)
abline(-0.09493, 98.79339, col = "red", lwd = 2)
setwd("~/GitHub/PokeStats/PokeStats")
raw <- read.csv("pokedex.csv")
pokedex <- raw
###T test that dragons are taller/longer than average pokemon
dragons <- subset(pokedex, Type1 == "Dragon" | Type2 == "Dragon")
t.test(dragons$Height, mu = mean(pokedex$Height), alternative = "greater")
t.test(dragons$Height, mu = mean(pokedex$Height[pokedex$Type1 != "Dragon" & pokedex$Type2 != "Dragon"]), alternative = "greater")
###Independent two sample T test comparing total stats of mega vs nonmega forms
mega <- pokedex$TotalStat[pokedex$Form == "Mega"]
nonmega <- pokedex$TotalStat[pokedex$Form != "Mega"]
boxplot(mega, nonmega, names = c("Mega", "Non-Mega"))
t.test(mega, nonmega, alternative = "greater")
###Matched pair T test comparing size of mega and nonmega forms
mega <- pokedex$TotalStat[pokedex$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "Mewtwo Y"]
boxplot(mega, nonmega, names = c("Mega", "Non-Mega"))
###Independent two sample T test comparing total stats of mega vs nonmega forms
mega_stat <- pokedex$TotalStat[pokedex$Form == "Mega"]
nonmega_stat <- pokedex$TotalStat[pokedex$Form != "Mega"]
rm(mega)
rm(nonmega)
###Matched pair T test comparing size of mega and nonmega forms
nonmega_height <- pokedex$Height[pokedex$Form != "Mega"]
mega_height <- pokedex$Height[pokedex$Form == "Mega" & Megas$Name != "Charizard Y" & Megas$Name != "Mewtwo Y"]
mega_height <- pokedex$Height[pokedex$Form == "Mega" & pokedex$Name != "Charizard Y" & pokedex$Name != "Mewtwo Y"]
boxplot(mega_height, nonmega_height, names = c("Mega", "Non-Mega"))
t.test(mega_height, nonmega_height, alternative = "greater")
###Matched Pair T test comparing total stat of Alolan Forms to their original Kanto form
AlolanForms <- subset(pokedex, Form == "Alolan")
qqnorm(AlolanForms$SpAtk)
qqline(AlolanForms$SpAtk)
qqnorm(mega_height)
qqline(mega_height)
qqnorm(nonmega_height)
qqline(nonmega_height)
###Matched Pair T test comparing total stat of Alolan Forms to their original Kanto form
AlolanForms <- subset(pokedex, Form == "Alolan")
qqnorm(AlolanForms$SpAtk)
qqline(AlolanForms$SpAtk)
KantoAlolan <- subset(pokedex, DexNum %in% AlolanForms$DexNum & Generation == 1)
qqnorm(KantoAlolan$SpAtk)
qqline(KantoAlolan$SpAtk)
t.test(AlolanForms$SpAtk, KantoAlolan$SpAtk, paired = TRUE, alternative = "two.sided")
qqnorm(dragons$Height)
qqline(dragons$Height)
###Anova for total stats as a function of legendary status
boxplot(pokedex$TotalStat~pokedex$Legendary)
legend.aov <- aov(pokedex$TotalStat~pokedex$Legendary)
anova(legend.aov)
TukeyHSD(legend.aov)
###Anova for Smogon Tiers
boxplot(pokedex$TotalStat~pokedex$Smogon)
smogon.aov <- aov(pokedex$TotalStat~pokedex$Smogon)
anova(smogon.aov)
TukeyHSD(smogon.aov)
##Height and weight
cor(pokedex$Height, pokedex$Weight)
weight.lm <- lm(Weight ~ Height, data = pokedex)
summary(weight.lm)
plot(pokedex$Weight~pokedex$Height)
abline(-11.821, 65.531, col = "red", lwd = 2)
legend(9.3, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
###Total Stats and Catch Rate
cor(pokedex$TotalStat, pokedex$CatchRate)
catch.lm <- lm(CatchRate ~ TotalStat, data = pokedex)
View(pokedex)
summary(catch.lm)
plot(pokedex$CatchRate~pokedex$TotalStat)
abline(-0.09493, 98.79339, col = "red", lwd = 2)
legend(9.3, 99, legend = c("y = 65.531x + -11.821", "R2 = 0.4443"), col = c("red"), lty=c(1), lwd=c(2), cex = 0.8)
abline(-0.09493, 98.79339, col = "red", lwd = 2)
abline(-0.430933, 282.65423, col = "red", lwd = 2)
plot(pokedex$CatchRate~pokedex$TotalStat)
abline(-0.430933, 282.65423, col = "red", lwd = 2)
